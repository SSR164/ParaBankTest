plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'com.vampir6307'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
def allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'com.codeborne:selenide:6.15.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.9.2'
    testImplementation 'io.qameta.allure:allure-java-commons:2.21.0'
    testImplementation 'io.qameta.allure:allure-junit5:2.21.0'
    implementation 'net.datafaker:datafaker:2.0.2'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation  'org.slf4j:slf4j-simple:2.0.7'
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"
    testImplementation  "io.rest-assured:json-schema-validator:5.3.1"
    testImplementation "io.qameta.allure:allure-selenide:$allureVersion"
    implementation 'io.qameta.allure:allure-rest-assured:2.29.1'
    implementation 'org.aeonbits.owner:owner:1.0.12'
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    implementation 'io.rest-assured:rest-assured:5.3.0'
    implementation 'io.rest-assured:xml-path:5.3.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'
    testImplementation 'org.assertj:assertj-core:3.24.2'


}

tasks.withType(Test) {
    systemProperties(System.getProperties())

    useJUnitPlatform()

    testLogging {
        lifecycle {

            events "started", "skipped", "failed", "standard_error", "standard_out"

            exceptionFormat "short"
        }
    }
}

task bank_test(type: Test) {
    useJUnitPlatform {
        includeTags("test")
    }
}

task bank_technical_test(type: Test) {
    useJUnitPlatform {
        includeTags("TECH")
    }
}
task bank_web_test(type: Test) {
    useJUnitPlatform {
        includeTags("WEB")
    }
}
task bank_api_test(type: Test) {
    useJUnitPlatform {
        includeTags("API")
    }
}
task bank_web_api_test(type: Test) {
    useJUnitPlatform {
        includeTags("WEB+API")
    }
}